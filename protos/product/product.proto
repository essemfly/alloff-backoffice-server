syntax = "proto3";

package grpcServer;

option go_package = "github.com/lessbutter/alloff-api/api/grpcServer";

service Product {
    rpc GetProduct(GetProductRequest) returns (GetProductResponse);
    rpc PutSpecialPrice(PutProductRequest) returns (PutProductResponse);
    rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
    rpc EditProduct(EditProductRequest) returns (EditProductResponse);
}

/*
    GRPC API Request & Response
*/

// Product Service
message GetProductRequest {
    string product_id = 1;
}
message GetProductResponse {
    ProductMessage product = 1;
}
message PutProductRequest {
    string product_id = 1;
    int32 special_price = 2;
}
message PutProductResponse {
    ProductMessage product = 1;
}
message ListProductsRequest {
    ProductQuery query = 1;
    int32 offset = 2;
    int32 limit = 3;
}
message ListProductsResponse {
    repeated ProductMessage products = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total_counts = 4;
    ProductQuery list_query = 5;
}
message CreateProductRequest {
    string alloff_name = 1;
    bool is_foreign_delivery = 2;
    string product_id = 3;
    optional int32 original_price = 4;
    optional int32 discounted_price = 5;
    int32 special_price = 6;
    string brand_key_name = 7;
    repeated InventoryMessage inventory = 8;
    repeated string description = 9;
    bool is_refund_possible = 10;
    repeated string images = 11;
    repeated string description_images = 12;
}
message CreateProductResponse {
    ProductMessage product = 1;
}

message EditProductRequest {
    optional string alloff_name = 1;
    optional bool is_foreign_delivery = 2;
    string product_id = 3;
    optional int32 original_price = 4;
    optional int32 discounted_price = 5;
    optional int32 special_price = 6;
    optional string brand_key_name = 7;
    repeated InventoryMessage inventory = 8;
    repeated string description = 9;
    optional bool is_refund_possible = 10;
    repeated string images = 11;
    repeated string description_images = 12;
    optional bool is_removed = 13;
}

message EditProductResponse {
    ProductMessage product = 1;
}

/*
    GRPC Structs
*/

message ProductMessage {
    string alloff_name = 1;
    bool is_foreign_delivery = 2;
    string product_id = 3;
    int32 original_price = 4;
    int32 discounted_price = 5;
    int32 special_price = 6;
    string brand_kor_name = 7;
    repeated InventoryMessage inventory = 8;
    repeated string description = 9;
    int32 earliest_delivery_days = 10;
    int32 latest_delivery_days = 11;
    int32 refund_fee = 12;
    bool is_refund_possible = 13;
    repeated string images = 14;
    repeated string description_images = 15;
    string category_name = 16;
    string alloff_category_name = 17;
    bool is_removed = 18;
    bool is_soldout = 19;
    int32 total_score = 20;
}

message InventoryMessage {
    string size = 1;
    int32 quantity = 2;
}

/*
    GRPC Queries
*/

message ProductQuery {
    optional string search_query = 1;
    optional string brand_id = 2;
    optional string category_id = 3;
    optional string alloff_category_id = 4;
}
