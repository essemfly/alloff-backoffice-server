openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /orders/:
    get:
      operationId: orders_list
      description: Adaptation of DRF ModelViewSet
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_create
      description: Adaptation of DRF ModelViewSet
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /orders/{id}/:
    get:
      operationId: orders_retrieve
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      description: Adaptation of DRF ModelViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Embedded:
      type: object
      description: |-
        Serializer for EmbeddedDocuments.

        Skips id field and uniqueness validation.
        When saving, skips calling instance.save
      properties:
        _id:
          type: string
          readOnly: true
          title: ' id'
        name:
          type: string
        uuid:
          type: string
        email:
          type: string
        created:
          type: string
          format: date-time
        mobile:
          type: string
        baseaddress:
          type: string
        detailaddress:
          type: string
        postcode:
          type: string
      required:
      - _id
      - mobile
    Order:
      type: object
      description: |-
        Serializer for DynamicDocuments.

        Maps all undefined fields to :class:`fields.DynamicField`.
      properties:
        id:
          type: string
          readOnly: true
        iamport:
          type: string
          readOnly: true
        payment:
          type: string
          readOnly: true
        orderstatus:
          $ref: '#/components/schemas/OrderstatusEnum'
        ordertype:
          $ref: '#/components/schemas/OrdertypeEnum'
        totalprice:
          type: integer
        productprice:
          type: integer
        deliveryprice:
          type: integer
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        memo:
          type: string
          nullable: true
        deliverytrackingnumber:
          type: string
          nullable: true
        deliverytrackingurl:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/Embedded'
      required:
      - iamport
      - id
      - payment
    OrderstatusEnum:
      enum:
      - PAYMENT_FINISHED
      - PRODUCT_PREPARING
      - DELIVERY_PREPARING
      - DELIVERY_STARTED
      - DELIVERY_FINISHED
      - CONFIRM_PAYMENT
      - CANCEL_REQUESTED
      - CANCEL_PENDING
      - CANCEL_FINISHED
      type: string
    OrdertypeEnum:
      enum:
      - NORMAL_ORDER
      - TIMEDEAL_ORDER
      type: string
    PatchedOrder:
      type: object
      description: |-
        Serializer for DynamicDocuments.

        Maps all undefined fields to :class:`fields.DynamicField`.
      properties:
        id:
          type: string
          readOnly: true
        iamport:
          type: string
          readOnly: true
        payment:
          type: string
          readOnly: true
        orderstatus:
          $ref: '#/components/schemas/OrderstatusEnum'
        ordertype:
          $ref: '#/components/schemas/OrdertypeEnum'
        totalprice:
          type: integer
        productprice:
          type: integer
        deliveryprice:
          type: integer
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        memo:
          type: string
          nullable: true
        deliverytrackingnumber:
          type: string
          nullable: true
        deliverytrackingurl:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/Embedded'
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- http://localhost:8000
