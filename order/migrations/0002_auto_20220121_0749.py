# Generated by Django 3.2.8 on 2022-01-21 07:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('order', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderItemActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.TextField(blank=True, null=True)),
                ('action_type', models.CharField(choices=[('STATUS_CHANGE', 'Status Change'), ('MEMO_ADD', 'Memo Add'), ('MEMO_DELETE', 'Memo Delete'), ('PAYMENT_ADJUSTMENT', 'Payment Adjustment'), ('REFUND_UPDATE', 'Refund Update')], max_length=100)),
                ('performed_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='logs', to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_action_logs',
            },
        ),
        migrations.AlterField(
            model_name='order',
            name='refund_price',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='OrderPaymentAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('CARD_CANCEL', 'Card Cancel'), ('CASH', 'Cash')], max_length=20)),
                ('previous_balance', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('resulting_balance', models.IntegerField()),
                ('pg_response', models.JSONField(blank=True, null=True)),
                ('bank_account_info', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_adjustments', to='order.order')),
            ],
            options={
                'db_table': 'order_payment_adjustments',
            },
        ),
        migrations.CreateModel(
            name='OrderItemStatusChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_from', models.CharField(choices=[('ORDER_ITEM_CREATED', 'Order Item Created'), ('ORDER_ITEM_RECREATED', 'Order Item Recreated'), ('ORDER_ITEM_PAYMENT_PENDING', 'Order Item Payment Pending'), ('ORDER_ITEM_PAYMENT_FINISHED', 'Order Item Payment Finished'), ('ORDER_ITEM_PRODUCT_PREPARING', 'Order Item Product Preparing'), ('ORDER_ITEM_FOREIGN_PRODUCT_INSPECTING', 'Order Item Foreign Product Inspecting'), ('ORDER_ITEM_DELIVERY_PREPARING', 'Order Item Delivery Preparing'), ('ORDER_ITEM_FOREIGN_DELIVERY_STARTED', 'Order Item Foreign Delivery Started'), ('ORDER_ITEM_DELIVERY_STARTED', 'Order Item Delivery Started'), ('ORDER_ITEM_DELIVERY_FINISHED', 'Order Item Delivery Finished'), ('ORDER_ITEM_CONFIRM_PAYMENT', 'Order Item Confirm Payment'), ('ORDER_ITEM_CANCEL_FINISHED', 'Order Item Cancel Finished'), ('ORDER_ITEM_EXCHANGE_REQUESTED', 'Order Item Exchange Requested'), ('ORDER_ITEM_EXCHANGE_PENDING', 'Order Item Exchange Pending'), ('ORDER_ITEM_EXCHANGE_FINISHED', 'Order Item Exchange Finished'), ('ORDER_ITEM_RETURN_REQUESTED', 'Order Item Return Requested'), ('ORDER_ITEM_RETURN_PENDING', 'Order Item Return Pending'), ('ORDER_ITEM_RETURN_FINISHED', 'Order Item Return Finished')], max_length=100)),
                ('status_to', models.CharField(choices=[('ORDER_ITEM_CREATED', 'Order Item Created'), ('ORDER_ITEM_RECREATED', 'Order Item Recreated'), ('ORDER_ITEM_PAYMENT_PENDING', 'Order Item Payment Pending'), ('ORDER_ITEM_PAYMENT_FINISHED', 'Order Item Payment Finished'), ('ORDER_ITEM_PRODUCT_PREPARING', 'Order Item Product Preparing'), ('ORDER_ITEM_FOREIGN_PRODUCT_INSPECTING', 'Order Item Foreign Product Inspecting'), ('ORDER_ITEM_DELIVERY_PREPARING', 'Order Item Delivery Preparing'), ('ORDER_ITEM_FOREIGN_DELIVERY_STARTED', 'Order Item Foreign Delivery Started'), ('ORDER_ITEM_DELIVERY_STARTED', 'Order Item Delivery Started'), ('ORDER_ITEM_DELIVERY_FINISHED', 'Order Item Delivery Finished'), ('ORDER_ITEM_CONFIRM_PAYMENT', 'Order Item Confirm Payment'), ('ORDER_ITEM_CANCEL_FINISHED', 'Order Item Cancel Finished'), ('ORDER_ITEM_EXCHANGE_REQUESTED', 'Order Item Exchange Requested'), ('ORDER_ITEM_EXCHANGE_PENDING', 'Order Item Exchange Pending'), ('ORDER_ITEM_EXCHANGE_FINISHED', 'Order Item Exchange Finished'), ('ORDER_ITEM_RETURN_REQUESTED', 'Order Item Return Requested'), ('ORDER_ITEM_RETURN_PENDING', 'Order Item Return Pending'), ('ORDER_ITEM_RETURN_FINISHED', 'Order Item Return Finished')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.orderitemactionlog')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_status_change_logs',
            },
        ),
        migrations.CreateModel(
            name='OrderItemRefundUpdateLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_delivery_price', models.IntegerField()),
                ('refund_amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.orderitemactionlog')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_refund_update_logs',
            },
        ),
        migrations.CreateModel(
            name='OrderItemMemo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memos', to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_memos',
            },
        ),
        migrations.CreateModel(
            name='OrderItemAlimtalkLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alimtalk_type', models.CharField(choices=[('DELIVERY_STARTED', 'Delivery Started'), ('CANCEL_FINISHED', 'Cancel Finished')], max_length=100)),
                ('request_id', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.orderitemactionlog')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_alimtalk_logs',
            },
        ),
    ]
