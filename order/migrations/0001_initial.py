# Generated by Django 3.2.8 on 2022-01-20 14:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alloff_order_id', models.CharField(db_index=True, max_length=32)),
                ('order_status', models.CharField(choices=[('ORDER_CREATED', 'Order Created'), ('ORDER_RECREATED', 'Order Recreated'), ('ORDER_PAYMENT_PENDING', 'Order Payment Pending'), ('ORDER_PAYMENT_FINISHED', 'Order Payment Finished')], max_length=50)),
                ('user_id', models.CharField(db_index=True, max_length=24)),
                ('user', models.JSONField()),
                ('user_memo', models.TextField(default='')),
                ('product_price', models.IntegerField()),
                ('delivery_price', models.IntegerField(default=0)),
                ('total_price', models.IntegerField()),
                ('refund_price', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ordered_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.RunSQL("alter table orders alter column user_memo set default '';"),
        migrations.RunSQL("alter table orders alter column delivery_price set default 0;"),
        migrations.RunSQL("alter table orders alter column refund_price set default 0;"),

        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_code', models.CharField(db_index=True, max_length=16, unique=True)),
                ('order_item_type', models.CharField(choices=[('NORMAL_ORDER', 'Normal Order'), ('TIMEDEAL_ORDER', 'Timedeal Order'), ('EXHIBITION_ORDER', 'Exhibition Order'), ('UNKNOWN_ORDER', 'Unknown Order')], max_length=50)),
                ('order_item_status', models.CharField(choices=[('ORDER_ITEM_CREATED', 'Order Item Created'), ('ORDER_ITEM_RECREATED', 'Order Item Recreated'), ('ORDER_ITEM_PAYMENT_PENDING', 'Order Item Payment Pending'), ('ORDER_ITEM_PAYMENT_FINISHED', 'Order Item Payment Finished'), ('ORDER_ITEM_PRODUCT_PREPARING', 'Order Item Product Preparing'), ('ORDER_ITEM_FOREIGN_PRODUCT_INSPECTING', 'Order Item Foreign Product Inspecting'), ('ORDER_ITEM_DELIVERY_PREPARING', 'Order Item Delivery Preparing'), ('ORDER_ITEM_FOREIGN_DELIVERY_STARTED', 'Order Item Foreign Delivery Started'), ('ORDER_ITEM_DELIVERY_STARTED', 'Order Item Delivery Started'), ('ORDER_ITEM_DELIVERY_FINISHED', 'Order Item Delivery Finished'), ('ORDER_ITEM_CONFIRM_PAYMENT', 'Order Item Confirm Payment'), ('ORDER_ITEM_CANCEL_FINISHED', 'Order Item Cancel Finished'), ('ORDER_ITEM_EXCHANGE_REQUESTED', 'Order Item Exchange Requested'), ('ORDER_ITEM_EXCHANGE_PENDING', 'Order Item Exchange Pending'), ('ORDER_ITEM_EXCHANGE_FINISHED', 'Order Item Exchange Finished'), ('ORDER_ITEM_RETURN_REQUESTED', 'Order Item Return Requested'), ('ORDER_ITEM_RETURN_PENDING', 'Order Item Return Pending'), ('ORDER_ITEM_RETURN_FINISHED', 'Order Item Return Finished')], max_length=50)),
                ('brand_keyname', models.CharField(max_length=50)),
                ('brand_korname', models.CharField(max_length=50)),
                ('product_id', models.CharField(db_index=True, max_length=24)),
                ('product_url', models.URLField()),
                ('product_img', models.URLField()),
                ('product_name', models.CharField(max_length=100)),
                ('cancel_description', models.JSONField()),
                ('delivery_description', models.JSONField()),
                ('is_removed', models.BooleanField(default=False)),
                ('sales_price', models.IntegerField()),
                ('size', models.CharField(max_length=50)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('tracking_url', models.URLField(blank=True, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ordered_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_started_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_finished_at', models.DateTimeField(blank=True, null=True)),
                ('cancel_requested_at', models.DateTimeField(blank=True, null=True)),
                ('cancel_finished_at', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='order.order')),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imp_uid', models.CharField(db_index=True, max_length=32)),
                ('payment_status', models.CharField(choices=[('PAYMENT_CREATED', 'Payment Created'), ('PAYMENT_CONFIRMED', 'Payment Confirmed'), ('PAYMENT_TIME_OUT', 'Payment Time Out'), ('PAYMENT_CANCELED', 'Payment Canceled'), ('PAYMENT_REFUND_REQUESTED', 'Payment Refund Requested'), ('PAYMENT_REFUND_FINISHED', 'Payment Refund Finished')], max_length=32)),
                ('pg', models.CharField(max_length=32)),
                ('pay_method', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=100)),
                ('merchant_uid', models.CharField(db_index=True, max_length=24)),
                ('amount', models.PositiveIntegerField()),
                ('buyer_name', models.CharField(max_length=20)),
                ('buyer_mobile', models.CharField(max_length=11)),
                ('buyer_address', models.TextField()),
                ('buyer_post_code', models.CharField(max_length=6)),
                ('company', models.CharField(max_length=32)),
                ('app_scheme', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='RefundItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_fee', models.IntegerField()),
                ('refund_amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.order')),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'refund_items',
            },
        ),
        migrations.CreateModel(
            name='RefundItemHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_from', models.IntegerField(blank=True, null=True)),
                ('fee_from', models.IntegerField(blank=True, null=True)),
                ('amount_to', models.IntegerField()),
                ('fee_to', models.IntegerField()),
                ('refund_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='histories', to='order.refunditem')),
            ],
            options={
                'db_table': 'refund_item_histories',
            },
        ),
    ]
