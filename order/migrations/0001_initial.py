# Generated by Django 3.2.8 on 2022-01-27 02:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alloff_order_id', models.CharField(db_index=True, max_length=32, unique=True)),
                ('order_status', models.CharField(choices=[('ORDER_CREATED', 'Order Created'), ('ORDER_RECREATED', 'Order Recreated'), ('ORDER_PAYMENT_PENDING', 'Order Payment Pending'), ('ORDER_PAYMENT_FINISHED', 'Order Payment Finished')], max_length=50)),
                ('user_id', models.CharField(db_index=True, max_length=24)),
                ('user', models.JSONField()),
                ('user_memo', models.TextField(default='', null=True)),
                ('product_price', models.IntegerField()),
                ('delivery_price', models.IntegerField(default=0, null=True)),
                ('total_price', models.IntegerField()),
                ('refund_price', models.IntegerField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ordered_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_code', models.CharField(db_index=True, max_length=16, unique=True)),
                ('order_item_type', models.CharField(choices=[('NORMAL_ORDER', 'Normal Order'), ('TIMEDEAL_ORDER', 'Timedeal Order'), ('EXHIBITION_ORDER', 'Exhibition Order'), ('UNKNOWN_ORDER', 'Unknown Order')], max_length=50)),
                ('order_item_status', models.CharField(choices=[('ORDER_ITEM_CREATED', 'Order Item Created'), ('ORDER_ITEM_RECREATED', 'Order Item Recreated'), ('ORDER_ITEM_PAYMENT_PENDING', 'Order Item Payment Pending'), ('ORDER_ITEM_PAYMENT_FINISHED', 'Order Item Payment Finished'), ('ORDER_ITEM_PRODUCT_PREPARING', 'Order Item Product Preparing'), ('ORDER_ITEM_FOREIGN_PRODUCT_INSPECTING', 'Order Item Foreign Product Inspecting'), ('ORDER_ITEM_DELIVERY_PREPARING', 'Order Item Delivery Preparing'), ('ORDER_ITEM_FOREIGN_DELIVERY_STARTED', 'Order Item Foreign Delivery Started'), ('ORDER_ITEM_DELIVERY_STARTED', 'Order Item Delivery Started'), ('ORDER_ITEM_DELIVERY_FINISHED', 'Order Item Delivery Finished'), ('ORDER_ITEM_CONFIRM_PAYMENT', 'Order Item Confirm Payment'), ('ORDER_ITEM_CANCEL_FINISHED', 'Order Item Cancel Finished'), ('ORDER_ITEM_EXCHANGE_REQUESTED', 'Order Item Exchange Requested'), ('ORDER_ITEM_EXCHANGE_PENDING', 'Order Item Exchange Pending'), ('ORDER_ITEM_EXCHANGE_FINISHED', 'Order Item Exchange Finished'), ('ORDER_ITEM_RETURN_REQUESTED', 'Order Item Return Requested'), ('ORDER_ITEM_RETURN_PENDING', 'Order Item Return Pending'), ('ORDER_ITEM_RETURN_FINISHED', 'Order Item Return Finished')], max_length=50)),
                ('brand_keyname', models.CharField(max_length=50)),
                ('brand_korname', models.CharField(max_length=50)),
                ('product_id', models.CharField(db_index=True, max_length=24)),
                ('product_url', models.TextField(blank=True, null=True)),
                ('product_img', models.TextField()),
                ('product_name', models.CharField(max_length=100)),
                ('cancel_description', models.JSONField()),
                ('delivery_description', models.JSONField()),
                ('sales_price', models.IntegerField()),
                ('size', models.CharField(max_length=50)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('tracking_url', models.TextField(blank=True, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ordered_at', models.DateTimeField(blank=True, null=True)),
                ('payment_finished_at', models.DateTimeField(blank=True, null=True)),
                ('product_preparing_at', models.DateTimeField(blank=True, null=True)),
                ('foreign_product_inspecting_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_preparing_at', models.DateTimeField(blank=True, null=True)),
                ('foreign_delivery_started_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_started_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_finished_at', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancel_requested_at', models.DateTimeField(blank=True, null=True)),
                ('cancel_finished_at', models.DateTimeField(blank=True, null=True)),
                ('exchange_requested_at', models.DateTimeField(blank=True, null=True)),
                ('exchange_started_at', models.DateTimeField(blank=True, null=True)),
                ('exchange_finished_at', models.DateTimeField(blank=True, null=True)),
                ('return_requested_at', models.DateTimeField(blank=True, null=True)),
                ('return_started_at', models.DateTimeField(blank=True, null=True)),
                ('return_finished_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='order.order')),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='OrderItemActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.TextField(blank=True, null=True)),
                ('action_type', models.CharField(choices=[('STATUS_CHANGE', 'Status Change'), ('MEMO_ADD', 'Memo Add'), ('MEMO_DELETE', 'Memo Delete'), ('PAYMENT_ADJUSTMENT', 'Payment Adjustment'), ('REFUND_UPDATE', 'Refund Update'), ('GENERATED_RECEIVED_ITEM', 'Generated Received Item'), ('FORCE_GENERATED_RECEIVED_ITEM', 'Force Generated Received Item'), ('RECEIVED_INVENTORY', 'Received Inventory')], db_index=True, max_length=100)),
                ('performed_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='logs', to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_action_logs',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imp_uid', models.CharField(db_index=True, max_length=32, null=True)),
                ('payment_status', models.CharField(choices=[('PAYMENT_CREATED', 'Payment Created'), ('PAYMENT_CONFIRMED', 'Payment Confirmed'), ('PAYMENT_TIME_OUT', 'Payment Time Out'), ('PAYMENT_CANCELED', 'Payment Canceled'), ('PAYMENT_REFUND_REQUESTED', 'Payment Refund Requested'), ('PAYMENT_REFUND_FINISHED', 'Payment Refund Finished')], max_length=32)),
                ('pg', models.CharField(max_length=32)),
                ('pay_method', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=100)),
                ('merchant_uid', models.CharField(db_index=True, max_length=24)),
                ('amount', models.PositiveIntegerField()),
                ('buyer_name', models.CharField(max_length=20)),
                ('buyer_mobile', models.CharField(max_length=11)),
                ('buyer_address', models.TextField()),
                ('buyer_post_code', models.CharField(max_length=6)),
                ('company', models.CharField(max_length=32)),
                ('app_scheme', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='RefundItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_fee', models.IntegerField(blank=True, default=0, null=True)),
                ('refund_amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.order')),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'refund_items',
            },
        ),
        migrations.CreateModel(
            name='RefundItemHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_from', models.IntegerField(blank=True, null=True)),
                ('fee_from', models.IntegerField(blank=True, null=True)),
                ('amount_to', models.IntegerField()),
                ('fee_to', models.IntegerField()),
                ('refund_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='histories', to='order.refunditem')),
            ],
            options={
                'db_table': 'refund_item_histories',
            },
        ),
        migrations.CreateModel(
            name='ReceivedItemGenerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_force', models.BooleanField()),
                ('received_item_id', models.IntegerField(db_index=True)),
                ('received_item_code', models.CharField(db_index=True, max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='received_item', to='order.orderitemactionlog')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'received_item_generation_logs',
            },
        ),
        migrations.CreateModel(
            name='OrderPaymentAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('CARD_CANCEL', 'Card Cancel'), ('CASH', 'Cash')], max_length=20)),
                ('previous_balance', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('resulting_balance', models.IntegerField()),
                ('pg_response', models.JSONField(blank=True, null=True)),
                ('bank_account_info', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_adjustments', to='order.order')),
            ],
            options={
                'db_table': 'order_payment_adjustments',
            },
        ),
        migrations.CreateModel(
            name='OrderItemStatusChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_from', models.CharField(choices=[('ORDER_ITEM_CREATED', 'Order Item Created'), ('ORDER_ITEM_RECREATED', 'Order Item Recreated'), ('ORDER_ITEM_PAYMENT_PENDING', 'Order Item Payment Pending'), ('ORDER_ITEM_PAYMENT_FINISHED', 'Order Item Payment Finished'), ('ORDER_ITEM_PRODUCT_PREPARING', 'Order Item Product Preparing'), ('ORDER_ITEM_FOREIGN_PRODUCT_INSPECTING', 'Order Item Foreign Product Inspecting'), ('ORDER_ITEM_DELIVERY_PREPARING', 'Order Item Delivery Preparing'), ('ORDER_ITEM_FOREIGN_DELIVERY_STARTED', 'Order Item Foreign Delivery Started'), ('ORDER_ITEM_DELIVERY_STARTED', 'Order Item Delivery Started'), ('ORDER_ITEM_DELIVERY_FINISHED', 'Order Item Delivery Finished'), ('ORDER_ITEM_CONFIRM_PAYMENT', 'Order Item Confirm Payment'), ('ORDER_ITEM_CANCEL_FINISHED', 'Order Item Cancel Finished'), ('ORDER_ITEM_EXCHANGE_REQUESTED', 'Order Item Exchange Requested'), ('ORDER_ITEM_EXCHANGE_PENDING', 'Order Item Exchange Pending'), ('ORDER_ITEM_EXCHANGE_FINISHED', 'Order Item Exchange Finished'), ('ORDER_ITEM_RETURN_REQUESTED', 'Order Item Return Requested'), ('ORDER_ITEM_RETURN_PENDING', 'Order Item Return Pending'), ('ORDER_ITEM_RETURN_FINISHED', 'Order Item Return Finished')], max_length=100)),
                ('status_to', models.CharField(choices=[('ORDER_ITEM_CREATED', 'Order Item Created'), ('ORDER_ITEM_RECREATED', 'Order Item Recreated'), ('ORDER_ITEM_PAYMENT_PENDING', 'Order Item Payment Pending'), ('ORDER_ITEM_PAYMENT_FINISHED', 'Order Item Payment Finished'), ('ORDER_ITEM_PRODUCT_PREPARING', 'Order Item Product Preparing'), ('ORDER_ITEM_FOREIGN_PRODUCT_INSPECTING', 'Order Item Foreign Product Inspecting'), ('ORDER_ITEM_DELIVERY_PREPARING', 'Order Item Delivery Preparing'), ('ORDER_ITEM_FOREIGN_DELIVERY_STARTED', 'Order Item Foreign Delivery Started'), ('ORDER_ITEM_DELIVERY_STARTED', 'Order Item Delivery Started'), ('ORDER_ITEM_DELIVERY_FINISHED', 'Order Item Delivery Finished'), ('ORDER_ITEM_CONFIRM_PAYMENT', 'Order Item Confirm Payment'), ('ORDER_ITEM_CANCEL_FINISHED', 'Order Item Cancel Finished'), ('ORDER_ITEM_EXCHANGE_REQUESTED', 'Order Item Exchange Requested'), ('ORDER_ITEM_EXCHANGE_PENDING', 'Order Item Exchange Pending'), ('ORDER_ITEM_EXCHANGE_FINISHED', 'Order Item Exchange Finished'), ('ORDER_ITEM_RETURN_REQUESTED', 'Order Item Return Requested'), ('ORDER_ITEM_RETURN_PENDING', 'Order Item Return Pending'), ('ORDER_ITEM_RETURN_FINISHED', 'Order Item Return Finished')], max_length=100)),
                ('tracking_number_from', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_number_to', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_url_from', models.TextField(blank=True, null=True)),
                ('tracking_url_to', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status_change', to='order.orderitemactionlog')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_status_change_logs',
            },
        ),
        migrations.CreateModel(
            name='OrderItemRefundUpdateLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_delivery_price', models.IntegerField()),
                ('refund_amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='refund_update', to='order.orderitemactionlog')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_refund_update_logs',
            },
        ),
        migrations.CreateModel(
            name='OrderItemMemo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memos', to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_memos',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItemAlimtalkLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alimtalk_type', models.CharField(choices=[('DELIVERY_STARTED', 'Delivery Started'), ('CANCEL_FINISHED', 'Cancel Finished')], max_length=100)),
                ('request_id', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='alimtalk', to='order.orderitemactionlog')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'order_item_alimtalk_logs',
            },
        ),
        migrations.CreateModel(
            name='InventoryReceiptLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_item_id', models.IntegerField(db_index=True)),
                ('received_item_code', models.CharField(db_index=True, max_length=30)),
                ('inventory_id', models.IntegerField(db_index=True)),
                ('inventory_code', models.CharField(db_index=True, max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('action_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='order.orderitemactionlog')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='order.orderitem')),
            ],
            options={
                'db_table': 'inventory_receipt_logs',
            },
        ),
        migrations.RunSQL("alter table orders alter column user_memo set default '';"),
        migrations.RunSQL("alter table orders alter column delivery_price set default 0;"),
        migrations.RunSQL("alter table orders alter column refund_price set default 0;"),
        migrations.RunSQL("alter table orders alter column user_memo drop not null;"),
        migrations.RunSQL("alter table orders alter column delivery_price drop not null;"),
        migrations.RunSQL("alter table orders alter column refund_price drop not null;"),
    ]
